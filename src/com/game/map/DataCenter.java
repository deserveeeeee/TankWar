package com.game.map;

import java.awt.Image;
import java.io.File;
import java.io.IOException;
import java.util.Map;
import java.util.TreeMap;

import javax.imageio.ImageIO;

public class DataCenter {
	public static int[][] map = { 
			{9,	9,	9,	9,	9,	9,	9,	9,	9,	9,	9,	9,	9,	9,	9,	9,	9,	9,	9,	9,	9,	9,	9,	9,	9,	9,	9,	9,	9,	9,	9,	9,	9},
			{9,	9,	0,	0,	0,	0,	0,	0,	0,	7,	7,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	9,	9},
			{9,	9,	6,	6,	6,	6,	0,	0,	0,	7,	0,	0,	0,	0,	4,	4,	4,	0,	0,	0,	0,	7,	7,	7,	6,	6,	6,	6,	0,	0,	0,	9,	9},
			{9,	9,	0,	0,	6,	6,	6,	6,	0,	0,	6,	6,	6,	6,	0,	0,	4,	4,	4,	0,	0,	6,	6,	6,	6,	6,	6,	6,	6,	6,	6,	9,	9},
			{9,	9,	0,	0,	6,	6,	9,	9,	6,	6,	6,	6,	6,	6,	6,	0,	4,	4,	4,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	9,	9},
			{9,	9,	0,	0,	0,	0,	9,	9,	6,	6,	9,	9,	4,	6,	6,	0,	0,	0,	7,	7,	7,	7,	0,	0,	6,	6,	6,	6,	0,	0,	0,	9,	9},
			{9,	9,	0,	7,	7,	7,	6,	6,	6,	6,	9,	9,	4,	6,	6,	0,	6,	6,	7,	7,	7,	7,	0,	6,	6,	6,	6,	6,	6,	6,	6,	9,	9},
			{9,	9,	0,	7,	7,	7,	6,	6,	6,	6,	6,	6,	6,	6,	6,	0,	6,	6,	0,	0,	0,	0,	0,	6,	6,	0,	0,	6,	6,	6,	6,	9,	9},
			{9,	9,	0,	7,	7,	7,	0,	0,	0,	6,	6,	6,	6,	0,	0,	0,	0,	0,	0,	6,	6,	0,	0,	6,	6,	0,	6,	6,	0,	0,	0,	9,	9},
			{9,	9,	0,	7,	7,	7,	0,	9,	9,	0,	0,	0,	9,	9,	9,	9,	9,	9,	9,	9,	0,	0,	0,	0,	0,	0,	6,	6,	0,	0,	0,	9,	9},
			{9,	9,	0,	7,	0,	0,	0,	0,	9,	0,	0,	0,	0,	0,	0,	0,	0,	0,	4,	4,	4,	4,	4,	4,	4,	4,	4,	4,	4,	4,	4,	9,	9},
			{9,	9,	0,	7,	0,	0,	0,	0,	9,	9,	0,	7,	7,	7,	7,	7,	7,	0,	4,	4,	4,	4,	4,	4,	4,	4,	4,	4,	4,	4,	4,	9,	9},
			{9,	9,	4,	4,	4,	4,	4,	0,	0,	0,	0,	7,	7,	7,	7,	7,	7,	0,	4,	4,	4,	4,	0,	0,	9,	9,	9,	9,	0,	0,	0,	9,	9},
			{9,	9,	4,	4,	4,	4,	4,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	4,	4,	4,	4,	0,	9,	9,	0,	0,	0,	0,	0,	0,	9,	9},
			{9,	9,	0,	0,	0,	0,	0,	6,	6,	0,	9,	4,	4,	0,	0,	0,	0,	0,	6,	6,	6,	0,	9,	9,	0,	6,	6,	4,	4,	4,	4,	9,	9},
			{9,	9,	0,	6,	6,	6,	6,	6,	6,	0,	4,	4,	4,	0,	6,	6,	6,	0,	4,	4,	6,	6,	6,	6,	6,	6,	6,	0,	0,	0,	0,	9,	9},
			{9,	9,	0,	0,	0,	6,	0,	6,	6,	0,	0,	4,	4,	0,	6,	0,	6,	0,	4,	4,	0,	0,	6,	0,	0,	9,	9,	0,	0,	0,	0,	9,	9},
			{9,	9,	9,	9,	9,	9,	9,	9,	9,	9,	9,	9,	9,	9,	9,	9,	9,	9,	9,	9,	9,	9,	9,	9,	9,	9,	9,	9,	9,	9,	9,	9,	9},


	};

	static Map<Integer, String> keyImgNames = new TreeMap<Integer, String>();
	// 静态构造方法：根据key的值找出名字
	static {
		keyImgNames.put(4, "grass.png");
		keyImgNames.put(6, "brick.png");
		keyImgNames.put(7, "water.png");
		keyImgNames.put(9, "steels.png");
		keyImgNames.put(0, "home.jpg");
		keyImgNames.put(1, "tankD.gif");
		keyImgNames.put(2, "tankR.gif");
		keyImgNames.put(3, "mine.png");
	}

	public static Image getImage(int key) {
		// 先准备好一张改变大小、截取过像素的图片
		// 把一张图片的大小进行截取
		Image image = null;
		try {
			image = ImageIO.read(new File("Images\\" + keyImgNames.get(key))).getScaledInstance(40, 40,
					Image.SCALE_DEFAULT);
			// 这是把图片都设置为40*40像素的大小。
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return image;
	}
}
